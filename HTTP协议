HTTPS协议
HyperText Transfer Protocol
超文本传输协议，是一个基于请求与响应模式的，
应用层协议的，也是互联网上应用最为广泛一种网络协议。

支持客户端/服务器模式
简单快速
灵活
无连接
无状态

url格式组成与解析

Uniform Resource Locator 统一资源定位符，是互联网上标准资源的地址。
HTTP使用URL来建立连接和传输数据。

协议部分 https，https，FTP，SMTP、POP3
域名部分 域名，也可以是ip地址
端口部分 port 默认端口 http 80 https 443 ftp 21
资源路径部分 域名后 ？参数前的部分
图片 视频 音频 链接 接口 
查询参数部分？ “uid = 123 & page =1”，可以允许有多个参数
多个之间用“&”作为分隔符
参数部分内容不会被系统解析


HTTP请求：请求行，请求头，请求体

POST url  客服端与服务器端需要遵守的协议 HTTP/1.1
Host:
User-Agent:
请求头 header， 一个个的键值对 
重点掌握 Content-Type=application/json
空行表示请求头数据已经结束

空行之后是请求体

get请求没有请求体，一般请求体在post和put请求方式中使用
内容形式，json、html、text等

请求行 请求行是带关键字的
GET 从服务器获取资源
POST 在服务器新建一个资源 增
PUT 在服务器更新资源（修改）客户端提供改变后的完整资源 改
DELETE 在服务器删除资源 删


Content-Type 用于描述客户端向服务器端提交数据的格式
请求头中的内容是键值对
applicaiton/json 返回的是json类型数据

json文件 JavaScript Object Notation
纯文本 可读性很强， 可以提升网络传输效率
大括号保存对象
中括号保存数据 数组可以相互嵌套
多个数据有逗号隔开
键值对方式
字符串必须拥双引号



响应内容：响应行，响应头，响应体，header body

响应行 HTTP/1.1 200 OK
响应状态码 状态说明 5xx 服务器端有问题 4xx客户端有问题

响应头 
键值对方式，描述服务器相关信息

空行之后
响应体
返回请求的格式内容
响应数据格式 xml json 接口常用

200 ok GET 查询成功
201 CREATED  POST/PUT用户新建或修改数据成功
202 Accepted 

401 用户没有权限      【用户令牌错误】
403 用户没有得到授权 【用户令牌正确】

3x 重定向  要找的东西找不到



 


